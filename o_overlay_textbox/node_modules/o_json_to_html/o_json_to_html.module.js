
class O_json_to_html {
    constructor(){
        this.s_tag_property_name = "t"
        this.s_children_elements_property_name = "c"
        this.s_default_tag_name = "div"
        this.s_tag_inner_html = "s_inner_html"
        this.s_tag_inner_text = "s_inner_text"
    }

    f_recursive_convert_object_to_html_element(object){
        var s_tag_name = object[this.s_tag_property_name]
        s_tag_name = (s_tag_name) ? s_tag_name : this.s_default_tag_name

        var o_html_element = document.createElement(s_tag_name)


        // handle functions
        for(var s_prop_name in object){
            
            var value = object[s_prop_name]
            // console.log(typeof value)
            if(typeof value === "function"){
                // value.apply
                object[s_prop_name] = value.apply(object)
                // debugger
            }
        }     
        // handle static properties
        for(var s_prop_name in object){
            
            var value = object[s_prop_name]
            
            if(
                s_prop_name == this.s_tag_property_name ||
                s_prop_name == this.s_children_elements_property_name ||
                s_prop_name == this.s_default_tag_name ||
                s_prop_name == this.s_tag_inner_html ||
                s_prop_name == this.s_tag_inner_text
                ){

                continue
            }

            o_html_element.setAttribute(s_prop_name, value)
        }

        // handle childre
        var a_o_child_object = object[this.s_children_elements_property_name]
        if(a_o_child_object){
            for(var n_index_a_o_child_object in a_o_child_object){
                var o_child = a_o_child_object[n_index_a_o_child_object]    
                if(
                    Array.isArray(o_child) == false &&
                    typeof o_child === "object"
                    ){
                    var o_child_html_element = this.f_recursive_convert_object_to_html_element(o_child)
                    console.log("asdf")
                    o_html_element.appendChild(o_child_html_element)
                }
            }
        }

        // handle innerText innerHTML
        var s_inner_text = object[this.s_tag_inner_text]
        if(s_inner_text){
            o_html_element.innerText = s_inner_text
        }
        var s_inner_html = object[this.s_tag_inner_html]
        if(s_inner_html){
            o_html_element.innerHTML = s_inner_html
        }

        return o_html_element
    }
    f_recursive_convert_html_element_to_object(o_html_element){
                
        var obj = {};

        obj[this.s_default_tag_name] = o_html_element.tagName.toLowerCase();

        for (var n_i = 0, a_attributes = o_html_element.attributes; n_i < a_attributes.length; n_i++){
            obj[a_attributes[n_i].nodeName] = a_attributes[n_i].nodeValue;
        }

        var a_o_child_object = [];

        var child_elements = o_html_element.children; 

        for(var key = 0; key < child_elements.length; key++){
          var child_element = child_elements[key];

          var o_child_object = this.f_recursive_convert_html_element_to_object(child_element)
          a_o_child_object.push(o_child_object);
        }

        if(a_o_child_object.length >0){
          obj[this.s_children_elements_property_name] = a_o_child_object;
        }else{
          if(o_html_element.innerText != ""){
            obj[this.s_tag_inner_text] = o_html_element.innerText;
          }
        }
      
        return obj;
    }

    f_json_to_html(value){
        var object = value
        if(typeof value === "string"){
            object = JSON.parse(value)
        }
        var o_html_element = this.f_recursive_convert_object_to_html_element(object)
        return o_html_element
    }
    f_javascript_object_to_html(object){
        return this.f_recursive_convert_object_to_html_element(object)
    }
    f_html_to_object(o_html_element){
        return this.f_recursive_convert_html_element_to_object(o_html_element)
    }
    f_html_to_json(o_html_element){
        return JSON.stringify(this.f_html_to_object(o_html_element))
    }
    //aliases 
    parse(){
        return this.f_json_to_html()
    }
}
var o_json_to_html = new O_json_to_html()

export default o_json_to_html
